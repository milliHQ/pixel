name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  test-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14', '16', '18']

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        id: node_setup
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Verify Node.js version
        run: echo "${{ steps.node_setup.outputs.node-version }}"

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Jest
        run: yarn test

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Upload artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            packages/*/dist/
          if-no-files-found: error

  publishRelease:
    name: Potentially publish release
    runs-on: ubuntu-latest
    needs: [test-integration, build]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 25

      - name: Fetch git tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: packages

      # git user is required (bot not used) by release-it
      - name: Set git user to GitHub Actions
        uses: fregante/setup-git-user@v1.0.1

      - name: npm authentication
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - name: Set registry for publish
        run: yarn config set registry https://registry.npmjs.org

      - name: Publish release
        run: yarn release:ci
